name: Rust CI

on:
  push:
    branches: [ '**' ]
  pull_request:
    branches: [ '**' ]

env:
  CARGO_TERM_COLOR: always

# See: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#concurrency.
# This will ensure that only one commit will be running tests at a time on each PR.
concurrency:
  group: ${{ github.ref }}-${{ github.workflow }}
  cancel-in-progress: true

jobs:
  build:
    strategy:
      matrix:
        rust: ["stable", "beta", "nightly"]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y pkg-config libdbus-1-dev libgtk-4-dev libadwaita-1-dev libnotify-dev gettext

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.rust }}

      - name: Build
        run: cargo +${{ matrix.rust }} build

      - name: Test
        run: cargo +${{ matrix.rust }} test

  clippy:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install dependencies
        run: |
          sudo apt update
          sudo apt upgrade -y
          sudo apt install -y pkg-config libdbus-1-dev libgtk-4-dev libadwaita-1-dev libnotify-dev gettext

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@beta
        with:
          components: clippy

      - name: Run clippy
        run: cargo clippy -- -Dclippy::all

  rustfmt:
    runs-on: ubuntu-latest
    needs: ['build']
    steps:
      - name: Checkout source
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-debug-${{ hashFiles('**/Cargo.toml') }}

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@nightly
        with:
          components: rustfmt

      - name: Run fmt
        run: cargo fmt --all -- --check
